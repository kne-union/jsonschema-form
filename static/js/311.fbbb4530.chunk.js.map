{"version":3,"file":"static/js/311.fbbb4530.chunk.js","mappings":"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","sources":["../../src/InfoPage.js","../../src/index.js","../../README.md","../node_modules/readme/modules.js","../../node_modules/classnames/index.js"],"sourcesContent":["import React from 'react';\nimport {Card, Space} from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./info-page.module.scss\";\n\nconst Part = ({className, title, extra, children, ...props}) => {\n    return (<Card\n            className={classnames(style[\"part\"], className, {\n                \"no-title\": !title,\n            })}\n            bordered={false}\n            title={title}\n            extra={extra}\n            {...props}\n        >\n            {children}\n        </Card>);\n};\n\nconst InfoPage = ({className, children}) => {\n    return (<Space className={className} direction=\"vertical\" size={0}>\n            {children}\n        </Space>);\n};\n\nInfoPage.Part = Part;\nexport default InfoPage;\n","import React, {useMemo, useRef} from 'react';\nimport {Button, Empty, Row, Col} from 'antd';\nimport Form, {\n    Input, InputNumber, Switch, Select, TextArea, GroupList, SubmitButton, ResetButton\n} from '@kne/react-form-antd';\nimport InfoPage from './InfoPage';\nimport listStyle from './list.module.scss';\nimport formStyle from './form.module.scss';\nimport '@kne/react-form-antd/dist/index.css';\n\nconst renderSchema = (schema, {column, gap, labelHidden}) => {\n    if (schema.type === 'object') {\n        const children = <Row gutter={[gap, 0]}>\n            {Object.keys(schema.properties).map((property) => {\n                const item = schema.properties[property];\n                //\n                return renderSchema(Object.assign({}, item, {\n                    propertyRequired: (schema.required || []).indexOf(property) > -1,\n                    propertyName: [schema.propertyName, property].filter((key) => !!key).join('.')\n                }), {column, gap});\n            })}\n        </Row>;\n        return <Col key={schema.propertyName || 'root'} span={24}>{schema.propertyName ?\n            <InfoPage.Part title={schema.title}>\n                {children}\n            </InfoPage.Part> : children}</Col>;\n    }\n    if (schema.type === 'array') {\n        return <Col key={schema.propertyName || 'root'} span={24}>\n            <SchemaArray schema={schema} column={column} gap={gap}/>\n        </Col>;\n    }\n    const rule = [schema.propertyRequired ? 'REQ' : '', schema.pattern ? `REG_EXP-${schema.pattern}` : '', (schema.hasOwnProperty('minLength') || schema.hasOwnProperty('maxLength')) ? `LEN-${schema.minLength}${schema.hasOwnProperty('maxLength') ? `-${schema.maxLength}` : ''}` : ''].join(' ');\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n        return <Col key={schema.propertyName} span={Math.round(24 / column)}>\n            <Select name={schema.propertyName} label={schema.title} rule={rule} labelHidden={labelHidden}\n                    value={schema.default}\n                    options={schema.enum.map((item) => ['integer', 'number', 'string'].indexOf(schema.type) > -1 ? ({\n                        label: item, value: item\n                    }) : item)}/>\n        </Col>\n    }\n    if (schema.type === 'string' && schema.maxLength > 20) {\n        return <Col key={schema.propertyName} span={24}>\n            <TextArea name={schema.propertyName} label={schema.title} rule={rule} labelHidden={labelHidden}\n                      value={schema.default} maxLength={schema.maxLength} showCount allowClear\n                      autoSize={{minRows: 2}}/>\n        </Col>\n    }\n    if (schema.type === 'string') {\n        return <Col key={schema.propertyName} span={Math.round(24 / column)}>\n            <Input name={schema.propertyName} labelHidden={labelHidden}\n                   label={schema.title} rule={rule}\n                   value={schema.default}/>\n        </Col>;\n    }\n    if (schema.type === 'boolean') {\n        return <Col key={schema.propertyName} span={Math.round(24 / column)}>\n            <Switch name={schema.propertyName} labelHidden={labelHidden}\n                    label={schema.title} rule={rule}\n                    checked={schema.default}/>\n        </Col>\n    }\n    if (['integer', 'number'].indexOf(schema.type) > -1) {\n        return <Col key={schema.propertyName} span={Math.round(24 / column)}>\n            <InputNumber name={schema.propertyName} labelHidden={labelHidden}\n                         label={schema.title} rule={rule}\n                         value={schema.default}/>\n        </Col>;\n    }\n    return null;\n};\n\nconst SchemaArray = ({schema, column, gap}) => {\n    const ref = useRef(null);\n    return <InfoPage.Part className={listStyle['list-part']} title={schema.title}\n                          extra={<Button type=\"link\" onClick={() => {\n                              ref.current.onAdd();\n                          }}>添加</Button>}>\n        <GroupList ref={ref} name={schema.propertyName} defaultLength={1}\n                   empty={<Empty description=\"\"><Button type=\"primary\" onClick={() => {\n                       ref.current.onAdd();\n                   }}>添加</Button></Empty>}>{(key, {\n            index, onRemove\n        }) => {\n            const isBasic = ['array', 'object'].indexOf(schema?.items?.type) === -1;\n            return <div key={key} className={listStyle[\"list-item\"]}>\n                <InfoPage.Part className={listStyle[\"list-item-part\"]} title={`${schema.title} ${index + 1}`}\n                               extra={<Button type=\"link\" danger onClick={onRemove}>删除</Button>}>\n                    <Row gutter={[gap, 0]}>\n                        {renderSchema(Object.assign({}, schema.items, isBasic ? {\n                            title: schema.title, propertyName: schema.propertyName\n                        } : {}), Object.assign({}, {column, gap}, isBasic ? {\n                            column: 1, labelHidden: true\n                        } : {}))}\n                    </Row>\n                </InfoPage.Part>\n            </div>\n        }}</GroupList>\n    </InfoPage.Part>;\n};\n\nconst JSONSchemaForm = ({column, gap, schema, rules, footer, ...props}) => {\n    const formChildren = useMemo(() => {\n        return renderSchema(schema, {column, gap});\n    }, [schema]);\n    return <Form className={formStyle['form']} {...props} rules={Object.assign({}, rules, {\n        REG_EXP: (value, pattern) => {\n            const regExp = new RegExp(pattern);\n            return {\n                result: regExp.test(value), msg: '%s不符合规则'\n            };\n        }\n    })}>\n        <InfoPage>\n            <Row gutter={[gap, 0]}>\n                {formChildren}\n            </Row>\n            {footer || <Row gutter={[gap, 0]} justify=\"center\">\n                <Col><SubmitButton>保存</SubmitButton></Col>\n                <Col><ResetButton>重置</ResetButton></Col>\n            </Row>}\n        </InfoPage>\n    </Form>;\n};\n\nJSONSchemaForm.defaultProps = {\n    column: 2, gap: 24, type: 'inner'\n};\n\nexport default JSONSchemaForm;\n","import * as component_1 from '@kne/jsonschema-form';\nimport '@kne/jsonschema-form/dist/index.css';\nconst readmeConfig = {\n    name: `jsonschema-form`,\n    summary: `<p>这里填写组件概要说明</p>`,\n    \n    packageName: `@kne/jsonschema-form`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `jsonschema_form_c4f36`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: JSONSchemaForm} = jsonSchemaForm;\nconst BaseExample = () => {\n    return <JSONSchemaForm onSubmit={(data) => {\n        console.log(data);\n    }} schema={{\n        \"title\": \"个人简历\",\n        \"description\": \"个人简历\",\n        \"type\": \"object\",\n        \"required\": [\"name\", \"gender\"],\n        \"properties\": {\n            \"name\": {\n                \"type\": \"string\", \"title\": \"姓名\", \"default\": \"张三\"\n            }, \"gender\": {\n                \"type\": \"string\", \"title\": \"性别\", \"enum\": [\"男\", \"女\"], default: \"男\"\n            }, \"age\": {\n                \"type\": \"integer\", \"title\": \"年龄\"\n            }, \"isPLA\": {\n                \"type\": \"boolean\", \"title\": \"是否党员\", default: true\n            }, \"desc\": {\n                \"type\": \"string\", \"title\": \"个人简介\", \"minLength\": 0, \"maxLength\": 500\n            }, \"education\": {\n                \"type\": \"array\", \"title\": \"教育经历\", \"items\": {\n                    \"type\": \"object\", \"required\": [\"schoolName\"], \"properties\": {\n                        \"schoolName\": {\n                            \"type\": \"string\", \"title\": \"学校名称\"\n                        }, \"type\": {\n                            \"type\": \"string\", \"title\": \"类型\", \"enum\": [\"统招\", \"非统招\"]\n                        }, \"major\": {\n                            \"type\": \"string\", \"title\": \"专业\"\n                        }, \"time\": {\n                            \"type\": \"object\", \"title\": \"时间\", \"properties\": {\n                                \"startTime\": {\n                                    \"type\": \"string\", \"title\": \"开始时间\"\n                                }, \"endTime\": {\n                                    \"type\": \"string\", \"title\": \"结束时间\"\n                                }\n                            }\n                        }, \"description\": {\n                            \"type\": \"string\", \"title\": \"简介\", \"minLength\": 0, \"maxLength\": 500\n                        }\n                    }\n                }\n            }, \"language\": {\n                \"type\": \"array\", \"title\": \"语言\", \"items\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"jsonSchemaForm\",\n    packageName: \"@kne/jsonschema-form\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import JsonschemaForm from '@components/jsonschema-form/README.md';export default {JsonschemaForm};\nexport const manifest = {\"name\":\"jsonschema-form\",\"version\":\"0.1.0\",\"open-version\":true,\"public-url\":\"/jsonschema-form\",\"modules\":[{\"name\":\"jsonschema-form\",\"baseDir\":\"/home/runner/work/jsonschema-form/jsonschema-form\",\"packageName\":\"@kne/jsonschema-form\"}]};","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["InfoPage","_ref2","className","children","React","Space","direction","size","Part","_ref","title","extra","props","_objectWithoutPropertiesLoose","_excluded$1","Card","_extends","classnames","style","bordered","renderSchema","schema","_ref3","column","gap","labelHidden","type","Row","gutter","Object","keys","properties","map","property","item","assign","propertyRequired","required","indexOf","propertyName","filter","key","join","Col","span","SchemaArray","rule","pattern","concat","hasOwnProperty","minLength","maxLength","Array","isArray","enum","length","Math","round","Select","name","label","value","default","options","TextArea","showCount","allowClear","autoSize","minRows","Input","Switch","checked","InputNumber","_ref4","ref","useRef","listStyle","Button","onClick","current","onAdd","GroupList","defaultLength","empty","Empty","description","_ref5","index","onRemove","_schema$items","isBasic","items","danger","JSONSchemaForm","rules","footer","_excluded","formChildren","useMemo","Form","formStyle","REG_EXP","result","RegExp","test","msg","justify","SubmitButton","ResetButton","defaultProps","JsonschemaForm","summary","packageName","api","example","isFull","list","code","scope","component","manifest","hasOwn","classNames","classes","i","arguments","arg","appendClass","parseValue","apply","toString","prototype","includes","call","newClass","module","exports"],"sourceRoot":""}